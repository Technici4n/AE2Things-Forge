plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.80'
    id("com.matthewprenger.cursegradle") version "1.4.0"
    id("com.diffplug.spotless") version "6.4.1"
}

group = "dev.technici4n"
version = System.getenv("AE2THINGS_VERSION") ?: "0.0.0"

repositories {
    maven {
        name = "Modmaven"
        url = uri("https://modmaven.dev/")

        content {
            includeGroup("appeng")
        }
    }

    maven {
        name = 'BlameJared Maven'
        url = uri('https://maven.blamejared.com')

        content {
            includeGroup("mezz.jei")
        }
    }

    maven {
        name = "Local"
        url = file("libs").toURI()
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    implementation "appeng:appliedenergistics2-neoforge:${ae2_version}"

    compileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"
}

sourceSets {
    main {
        resources {
            srcDir("src/generated/resources")
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

runs {
    // applies to all the run configs below
    configureEach {
        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', "ae2things"
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', "ae2things"
        programArgument '--nogui'
    }

    data {
        // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
        // workingDirectory project.file('run-data')

        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', "ae2things", '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

processResources {
    inputs.property("version", project.version)

    exclude(".cache")

    filesMatching("META-INF/mods.toml") {
        expand("version": project.version)
    }
}

/////////////
// Spotless
spotless {
    java {
        target("src/main/java/**/*.java")

        endWithNewline()
        indentWithSpaces()
        removeUnusedImports()
        toggleOffOn()
        eclipse().configFile("codeformat/codeformat.xml")
        importOrderFile("codeformat/ae2.importorder")
    }

    format("json") {
        target("src/*/resources/**/*.json")
        targetExclude("src/generated/resources/**")
        prettier().config(parser: "json")
    }
}

////////////////
// CurseForge
System.getenv("CURSEFORGE")?.with { String key ->
    curseforge {
        apiKey = key

        project {
            id = "609977"
            changelogType = "markdown"
            changelog = "View changelog at [the release page](https://github.com/Technici4n/AE2Things-Forge/releases/tag/${version})"

            if (version.contains("alpha")) {
                releaseType = "alpha"
            } else if (version.contains("beta")) {
                releaseType = "beta"
            } else {
                releaseType = "release"
            }

            addGameVersion("${minecraft_version}")
            addGameVersion("NeoForge")

            mainArtifact(jar) {
                displayName = "AE2 Things v${version}"

                relations {
                    requiredDependency("applied-energistics-2")
                }
            }
        }
    }
}
