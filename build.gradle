plugins {
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.15-beta'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = "dev.technici4n"
version = System.getenv("AE2THINGS_VERSION") ?: "0.0.0"

repositories {
    maven {
        name = "Modmaven"
        url = uri("https://modmaven.dev/")

        content {
            includeGroup("appeng")
        }
    }

    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "dev.emi"
        }
    }
}

configurations {
    localRuntimeOnly
    runtimeClasspath.extendsFrom localRuntimeOnly
}

dependencies {
    implementation "appeng:appliedenergistics2:${ae2_version}"
    localRuntimeOnly "dev.emi:emi-neoforge:${emi_version}"
}

sourceSets {
    main {
        resources {
            srcDir("src/generated/resources")
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
neoForge {
    version = neoforge_version

    mods {
        ae2things {
            sourceSet project.sourceSets.main
        }
    }

    runs {
        client {
            client()
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            systemProperty 'forge.enabledGameTestNamespaces', "ae2things"
        }

        server {
            server()
            systemProperty 'forge.enabledGameTestNamespaces', "ae2things"
            programArgument '--nogui'
        }

        data {
            data()
            // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
            // workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            programArguments.addAll '--mod', "ae2things", '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

processResources {
    inputs.property("version", project.version)

    exclude(".cache")

    filesMatching("META-INF/mods.toml") {
        expand("version": project.version)
    }
}

/////////////
// Spotless
spotless {
    java {
        target("src/main/java/**/*.java")

        endWithNewline()
        indentWithSpaces()
        removeUnusedImports()
        toggleOffOn()
        eclipse().configFile("codeformat/codeformat.xml")
        importOrderFile("codeformat/ae2.importorder")
    }

    format("json") {
        target("src/*/resources/**/*.json")
        targetExclude("src/generated/resources/**")
        prettier().config(parser: "json")
    }
}

////////////////
// CurseForge
System.getenv("CURSEFORGE")?.with { String key ->
    curseforge {
        apiKey = key

        project {
            id = "609977"
            changelogType = "markdown"
            changelog = "View changelog at [the release page](https://github.com/Technici4n/AE2Things-Forge/releases/tag/${version})"

            if (version.contains("alpha")) {
                releaseType = "alpha"
            } else if (version.contains("beta")) {
                releaseType = "beta"
            } else {
                releaseType = "release"
            }

            addGameVersion("${minecraft_version}")
            addGameVersion("NeoForge")

            mainArtifact(jar) {
                displayName = "AE2 Things v${version}"

                relations {
                    requiredDependency("applied-energistics-2")
                }
            }
        }
    }
}
